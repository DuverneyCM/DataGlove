(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     29104,        666]
NotebookOptionsPosition[     28354,        638]
NotebookOutlinePosition[     28700,        653]
CellTagsIndexPosition[     28657,        650]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"CartToSph", "=", 
   RowBox[{"CoordinateTransformData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Cartesian\>\"", "\[Rule]", "\"\<Spherical\>\""}], ",", 
       "3"}], "}"}], " ", ",", "\"\<Mapping\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"seqpos", "[", 
    RowBox[{"a_List", ",", "seq_List"}], "]"}], ":=", 
   RowBox[{"ReplaceList", "[", 
    RowBox[{"a", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x___", ",", 
        RowBox[{"Sequence", "@@", "seq"}], ",", "___"}], "}"}], 
      "\[RuleDelayed]", 
      RowBox[{"1", "+", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"xbee", "=", 
  RowBox[{"DeviceOpen", "[", 
   RowBox[{"\"\<Serial\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<COM7\>\"", ",", 
      RowBox[{"\"\<BaudRate\>\"", "\[Rule]", "115200"}]}], "}"}]}], 
   "]"}]}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{RGBColor[0.941, 0.961, 0.957], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
           {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
            JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}},
             CurveClosed->{1}]}, 
           {FaceForm[{RGBColor[0.5423, 0.63104, 0.63597], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{11.133, 
             18.727999999999998`}, {11.133, 18.451999999999998`}, {
             11.357000000000001`, 18.227999999999998`}, {11.633, 
             18.227999999999998`}, {14.792, 18.227999999999998`}, {15.068, 
             18.227999999999998`}, {15.292, 18.451999999999998`}, {15.292, 
             18.727999999999998`}, {15.292, 20.639000000000003`}, {15.292, 
             20.915}, {15.068, 21.139000000000003`}, {14.792, 
             21.139000000000003`}, {11.633, 21.139000000000003`}, {
             11.357000000000001`, 21.139000000000003`}, {11.133, 20.915}, {
             11.133, 20.639000000000003`}, {11.133, 18.727999999999998`}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             12.357000000000001`, 1.}, {14.113000000000001`, 1.}, {
             14.113000000000001`, 9.554}, {12.357000000000001`, 9.554}}}]}, 
           {FaceForm[{RGBColor[0.624375, 0.695304, 0.691308], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{15.876000000000001`, 19.799}, {8.122, 19.799}, {
             8.122, 11.516}, {10.573, 11.516}, {10.573, 11.493}, {
             11.982000000000001`, 9.171}, {14.539, 9.171}, {
             15.876000000000001`, 11.493}, {15.876000000000001`, 11.516}, {
             18.326, 11.516}, {18.326, 19.799}, {15.876000000000001`, 
             19.799}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             8.806000000000001, 7.993}, {9.995000000000001, 7.993}, {
             9.995000000000001, 11.008}, {8.806000000000001, 11.008}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16.5, 
             7.993}, {17.689, 7.993}, {17.689, 11.008}, {16.5, 11.008}}}]}},
          AspectRatio->Automatic,
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Serial\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (COM7)", "Not connected (COM7)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = DeviceObject[{"Serial", 1}],
                Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
               Devices`DeviceAPI`DeviceDump`indr$$ = 2}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                ImageSizeCache->{139., {5., 10.}}],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{RGBColor[0.941, 0.961, 0.957], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
           {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
            JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
             1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
             0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
             25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
             24.605}, {25.5, 23.5}, {25.5, 2.5}}},
             CurveClosed->{1}]}, 
           {FaceForm[{RGBColor[0.5423, 0.63104, 0.63597], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{11.133, 
             18.727999999999998`}, {11.133, 18.451999999999998`}, {
             11.357000000000001`, 18.227999999999998`}, {11.633, 
             18.227999999999998`}, {14.792, 18.227999999999998`}, {15.068, 
             18.227999999999998`}, {15.292, 18.451999999999998`}, {15.292, 
             18.727999999999998`}, {15.292, 20.639000000000003`}, {15.292, 
             20.915}, {15.068, 21.139000000000003`}, {14.792, 
             21.139000000000003`}, {11.633, 21.139000000000003`}, {
             11.357000000000001`, 21.139000000000003`}, {11.133, 20.915}, {
             11.133, 20.639000000000003`}, {11.133, 18.727999999999998`}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             12.357000000000001`, 1.}, {14.113000000000001`, 1.}, {
             14.113000000000001`, 9.554}, {12.357000000000001`, 9.554}}}]}, 
           {FaceForm[{RGBColor[0.624375, 0.695304, 0.691308], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{15.876000000000001`, 19.799}, {8.122, 19.799}, {
             8.122, 11.516}, {10.573, 11.516}, {10.573, 11.493}, {
             11.982000000000001`, 9.171}, {14.539, 9.171}, {
             15.876000000000001`, 11.493}, {15.876000000000001`, 11.516}, {
             18.326, 11.516}, {18.326, 19.799}, {15.876000000000001`, 
             19.799}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
             8.806000000000001, 7.993}, {9.995000000000001, 7.993}, {
             9.995000000000001, 11.008}, {8.806000000000001, 11.008}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16.5, 
             7.993}, {17.689, 7.993}, {17.689, 11.008}, {16.5, 11.008}}}]}},
          AspectRatio->Automatic,
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Serial\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (COM7)", "Not connected (COM7)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = DeviceObject[{"Serial", 1}],
                Devices`DeviceAPI`DeviceDump`ind$$, 
               Devices`DeviceAPI`DeviceDump`indr$$}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            TagBox[
             DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
               Opacity[1], 
               Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
              DeviceObject[{"Serial", 1}], 
              Devices`DeviceAPI`DeviceDump`props$$, 
              Devices`DeviceAPI`DeviceDump`vals$$, 
              Devices`DeviceAPI`DeviceDump`reg$$}, 
              
              DynamicBox[ToBoxes[
               Devices`DeviceAPI`DeviceDump`reg$$ = 
                 DeviceFramework`DeviceRegisteredQ[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`props$$ = 
                 DeviceFramework`DeviceExternalProperties[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`vals$$ = 
                 Devices`DeviceAPI`DeviceDump`d$$[
                  Devices`DeviceAPI`DeviceDump`props$$]; Column[
                  Join[{
                    BoxForm`MakeSummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}, 
                    StandardForm]}, 
                   MapThread[BoxForm`MakeSummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}, StandardForm]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
              DynamicModuleValues:>{}],
             "SummaryItem"], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"Serial", 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6402800383257685`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeviceClose", "[", "xbee", "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RemoveScheduledTask", "[", 
   RowBox[{"ScheduledTasks", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.639403236006385*^9, 3.639403243252799*^9}, {
  3.639403488002798*^9, 3.6394035386746964`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RemoveScheduledTask", "[", 
   RowBox[{"ScheduledTasks", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DeviceExecute", "[", 
  RowBox[{"xbee", ",", "\"\<ReadFlush\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bufferAux", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
  RowBox[{"i", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "100"}], ";", 
  RowBox[{"j", "=", "3"}], ";", 
  RowBox[{"a", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "j"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RunScheduledTask", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"buffer", "=", 
      RowBox[{"DeviceReadBuffer", "[", "xbee", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bufferAux", "=", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"bufferAux", ",", "buffer"}], "]"}], "//", "Flatten"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"i", "=", 
      RowBox[{"seqpos", "[", 
       RowBox[{"bufferAux", ",", 
        RowBox[{"{", 
         RowBox[{
         "170", ",", "85", ",", "85", ",", "85", ",", "85", ",", "170"}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "i", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"i", "=", 
        RowBox[{"{", "1", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"bufferAux", "=", 
      RowBox[{"Drop", "[", 
       RowBox[{"bufferAux", ",", 
        RowBox[{
         RowBox[{"i", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "bufferAux", "]"}], "\[GreaterEqual]", "108"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"trama", "=", 
         RowBox[{"Take", "[", 
          RowBox[{"bufferAux", ",", "108"}], "]"}]}], ";", 
        RowBox[{"bufferAux", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{"bufferAux", ",", "108"}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"datoR", "=", 
      RowBox[{"trama", "//", "FromCharacterCode"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dato16", "=", 
      RowBox[{"BinaryReadList", "[", 
       RowBox[{
        RowBox[{"StringToStream", "[", "datoR", "]"}], ",", 
        "\"\<Integer16\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"datos16", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{"dato16", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sph", "=", 
      RowBox[{
       RowBox[{"CartToSph", "/@", 
        RowBox[{"(", "datos16", ")"}]}], "//", "N"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"a", ",", 
          RowBox[{"datos16", "[", 
           RowBox[{"[", "18", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"-", "n"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
    "0.02"}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6394047548582582`*^9, 3.6394048369299526`*^9}, {
   3.6394049901927185`*^9, 3.639405042071686*^9}, {3.63940510596034*^9, 
   3.6394051116156635`*^9}, {3.6394051463596506`*^9, 3.639405190912199*^9}, {
   3.6394052428871717`*^9, 3.63940527607907*^9}, 3.639405367526301*^9, {
   3.6394054821278553`*^9, 3.6394055261333723`*^9}, {3.63941864921797*^9, 
   3.6394187133276367`*^9}, {3.6394187974324474`*^9, 3.639418871415679*^9}, {
   3.6394189426157513`*^9, 3.639418958363652*^9}, {3.6394200858551407`*^9, 
   3.6394201264554634`*^9}, {3.6394201565821867`*^9, 3.639420207782115*^9}, {
   3.6394202445572186`*^9, 3.6394202479254107`*^9}, 3.639420578228303*^9, 
   3.63942096735356*^9, {3.6394209977452984`*^9, 3.639421017609434*^9}, {
   3.6394211200312924`*^9, 3.639421123607497*^9}, {3.6394211536152134`*^9, 
   3.6394211539192305`*^9}, 3.6394212183199143`*^9, {3.639421296184368*^9, 
   3.639421315229457*^9}, {3.639421356872839*^9, 3.6394213592079725`*^9}, {
   3.6394214188693852`*^9, 3.639421424677717*^9}, {3.639421515725925*^9, 
   3.639421557142294*^9}, {3.6394216050220327`*^9, 3.6394216285413775`*^9}, {
   3.6394217239808364`*^9, 3.6394217404367776`*^9}, {3.6394217709885254`*^9, 
   3.6394218434036674`*^9}, {3.6394223097693415`*^9, 
   3.6394223111774225`*^9}, {3.6394224266650276`*^9, 3.639422451200431*^9}, {
   3.639422496111*^9, 3.6394225678551035`*^9}, {3.6394226527909613`*^9, 
   3.6394227446702166`*^9}, {3.6394235823761306`*^9, 3.63942360876764*^9}, {
   3.639423730417598*^9, 3.639423743300335*^9}, {3.6394238177105913`*^9, 
   3.6394239138490896`*^9}, {3.6394248152386465`*^9, 3.63942485008764*^9}, 
   3.639425058814578*^9, {3.6394252990523186`*^9, 3.6394252995003443`*^9}, {
   3.639425332028205*^9, 3.639425350739275*^9}, {3.6394254803376875`*^9, 
   3.6394254833228583`*^9}, {3.6394264507801943`*^9, 
   3.6394264581806173`*^9}, {3.639426517364002*^9, 3.6394265198121424`*^9}, {
   3.639426627891324*^9, 3.639426628411354*^9}, {3.639426759931876*^9, 
   3.6394267661052294`*^9}, {3.639426835896221*^9, 3.6394268371052904`*^9}, 
   3.6394269339608307`*^9, {3.639427359382163*^9, 3.6394273602782145`*^9}, {
   3.6394274186095505`*^9, 3.639427418968571*^9}, 3.639427460695958*^9, {
   3.6394280225730953`*^9, 3.639428075094099*^9}, {3.6394281553466897`*^9, 
   3.6394281625170994`*^9}, {3.639663187367433*^9, 3.639663208342633*^9}, 
   3.639663556988574*^9, 3.639663667778911*^9, {3.6396637956762266`*^9, 
   3.6396637966302805`*^9}, {3.6402793291212044`*^9, 3.640279378134008*^9}, {
   3.6402803792502685`*^9, 3.6402803813823905`*^9}, {3.6402807520195894`*^9, 
   3.6402807959341016`*^9}, {3.6402812867131724`*^9, 
   3.6402812882602606`*^9}, {3.6402814586890087`*^9, 3.640281537949542*^9}}],

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"datos16", "[", 
     RowBox[{"[", "18", "]"}], "]"}], "//", "Reverse"}], "//", "MatrixForm"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.6402800663723726`*^9, 3.640280134044244*^9}, {
  3.640281569331337*^9, 3.640281600663129*^9}}],

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"ListLinePlot", "@", 
   RowBox[{"Transpose", "[", "a", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6402813595383377`*^9, 3.640281359892358*^9}}],

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"datos16", "[", 
          RowBox[{"[", "18", "]"}], "]"}], "//", "Reverse"}], "//", 
        "Dynamic"}]}], "}"}], "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
    RowBox[{"Sphere", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "255"}], "]"}], ",", 
    "\[IndentingNewLine]", "Blue", ",", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"255", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
    "\[IndentingNewLine]", "Green", ",", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "255", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
    "\[IndentingNewLine]", "Red", ",", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "255"}], "}"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.640280170383322*^9, {3.6402802185340757`*^9, 3.640280220817207*^9}, {
   3.6402804585488043`*^9, 3.6402806257303667`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ImportString", "[", 
   RowBox[{"\"\<hola\>\"", ",", "\"\<Integer16\>\""}], "]"}], "//", 
  "Timing"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryReadList", "[", 
   RowBox[{
    RowBox[{"StringToStream", "[", "\"\<Hola\>\"", "]"}], ",", 
    "\"\<Integer16\>\""}], "]"}], "//", "Timing"}]}], "Input",
 CellChangeTimes->{{3.640299899644137*^9, 3.6402999602666044`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.04680030000000000300897085026008426212`4.690848550283811", ",", 
   RowBox[{"{", 
    RowBox[{"28520", ",", "24940"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.640299917475157*^9, 3.6402999276907415`*^9}, 
   3.6402999617606897`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"{", 
    RowBox[{"28488", ",", "24940"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.640299917475157*^9, 3.6402999276907415`*^9}, 
   3.64029996176369*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Timing", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScheduledTask", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.640300083720666*^9, 3.640300123907964*^9}}]
},
WindowSize->{1218, 758},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1004, 31, 72, "Input"],
Cell[1587, 55, 17086, 341, 79, "Output"]
}, Open  ]],
Cell[18688, 399, 85, 2, 31, "Input"],
Cell[18776, 403, 244, 5, 31, "Input"],
Cell[19023, 410, 6048, 126, 412, "Input"],
Cell[25074, 538, 307, 8, 31, "Input"],
Cell[25384, 548, 199, 4, 31, "Input"],
Cell[25586, 554, 1612, 46, 132, "Input"],
Cell[CellGroupData[{
Cell[27223, 604, 414, 10, 52, "Input"],
Cell[27640, 616, 283, 6, 31, "Output"],
Cell[27926, 624, 225, 6, 31, "Output"]
}, Open  ]],
Cell[28166, 633, 184, 3, 52, "Input"]
}
]
*)

(* End of internal cache information *)
